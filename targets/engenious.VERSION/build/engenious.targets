<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- Add EngeniousContentReference to item type selection in Visual Studio -->
  <ItemGroup>
    <AvailableItemName Include="EngeniousContentReference" />
  </ItemGroup>

  <!-- Get all Engenious Game Content References and store them in a list -->
  <ItemGroup>
    <ContentReferences Include="@(EngeniousContentReference)"/>
  </ItemGroup>

  <!-- This disables the IDE feature that skips executing msbuild in some build situations. --> 
  <PropertyGroup>
    <DisableFastUpToDateCheck>true</DisableFastUpToDateCheck>
  </PropertyGroup>

  <Target Name="Prepare">
    <PropertyGroup>
		<ContentRootDirectory>Content</ContentRootDirectory>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)' == 'Debug'">
		<ParentOutputDir>$(ProjectDir)$(ContentRootDirectory)\bin\Debug</ParentOutputDir>
		<ParentIntermediateDir>$(ProjectDir)$(ContentRootDirectory)\obj\Debug</ParentIntermediateDir>
	</PropertyGroup>
	<PropertyGroup Condition="'$(Configuration)' == 'Release'">
		<ParentOutputDir>$(ProjectDir)$(ContentRootDirectory)\bin\Release</ParentOutputDir>
		<ParentIntermediateDir>$(ProjectDir)$(ContentRootDirectory)\obj\Release</ParentIntermediateDir>
	</PropertyGroup>
    <PropertyGroup>

      <ContentRootDirectory>Content</ContentRootDirectory>


      <EngeniousContentBuilderExe Condition="'$(EngeniousContentBuilderExe)' == ''">$(MSBuildThisFileDirectory)..\..\..\..\ContentTool\bin\$(Configuration)\ContentTool.exe</EngeniousContentBuilderExe>

      <Header>/configuration:$(Configuration) /outputDir:&quot;$(ParentOutputDir)&quot; /intermediateDir:&quot;$(ParentIntermediateDir)&quot; /projectDir:&quot;$(ProjectDir)/&quot; /hidden:true</Header>

      <MonoExe Condition=" '$(OS)' != 'Windows_NT' And Exists ('/Library/Frameworks/Mono.framework/Versions/Current/bin/mono') ">/Library/Frameworks/Mono.framework/Versions/Current/bin/mono</MonoExe>
      <MonoExe Condition=" '$(OS)' != 'Windows_NT' And Exists ('/usr/local/bin/mono') ">/usr/local/bin/mono</MonoExe>
      <MonoExe Condition=" '$(OS)' != 'Windows_NT' And Exists ('/usr/bin/mono') ">/usr/bin/mono</MonoExe>
      <MonoExe Condition=" '$(OS)' != 'Windows_NT' And '$(MonoExe)' == '' ">mono</MonoExe>
    </PropertyGroup>

    <MakeDir Directories="$(ParentIntermediateDir)"/>
    <MakeDir Directories="$(ParentOutputDir)"/>

  </Target>

  <PropertyGroup>
    <CleanDependsOn>
      $(CleanDependsOn);
      CleanContent;
    </CleanDependsOn>
    <RebuildDependsOn>
      $(RebuildDependsOn);
      RebuildContent;
    </RebuildDependsOn>
  </PropertyGroup>

  <Target Name="CopyContent">
    <Copy SourceFiles="$(MSBuildThisFileDirectory)..\lib\net40\OpenTK.dll.config" DestinationFolder="$(ProjectDir)\$(OutputPath)\OpenTK.dll.config" SkipUnchangedFiles="true" />
  </Target>

  <Target Name="BuildContent"
        BeforeTargets="BeforeBuild;PreBuildEvent"
        DependsOnTargets="Prepare">


    <!--<Exec Command="chmod +x &quot;$(EngeniousContentBuilderExe)&quot;" Condition=" '$(OS)' == 'Unix' " />-->
    <Exec Command="$(MonoExe) &quot;$(EngeniousContentBuilderExe)&quot; /@:&quot;%(ContentReferences.FullPath)&quot; $(Header)"
          WorkingDirectory="%(ContentReferences.RootDir)%(ContentReferences.Directory)" Condition="Exists('%(ContentReferences.FullPath)')" />
    <ItemGroup>
      <ExtraContent Include="$(ParentOutputDir)\**\*.*" />
    </ItemGroup>
    <Copy SourceFiles="@(ExtraContent)" DestinationFolder="$(ProjectDir)\$(OutputPath)\Content\%(RecursiveDir)" SkipUnchangedFiles="true" />
  </Target>
  <Target Name="CleanContent" BeforeTargets="BeforeClean;Clean" DependsOnTargets="Prepare"> 
    <Exec Command="$(MonoExe) &quot;$(EngeniousContentBuilderExe)&quot; /@:&quot;%(ContentReferences.FullPath)&quot; $(Header) /clean"
          WorkingDirectory="%(ContentReferences.RootDir)%(ContentReferences.Directory)" Condition="Exists('%(ContentReferences.FullPath)')" />
  </Target>
  <Target Name="RebuildContent" BeforeTargets="BeforeRebuild;Rebuild" DependsOnTargets="Prepare"> 
    <Exec Command="$(MonoExe) &quot;$(EngeniousContentBuilderExe)&quot; /@:&quot;%(ContentReferences.FullPath)&quot; $(Header) /rebuild"
          WorkingDirectory="%(ContentReferences.RootDir)%(ContentReferences.Directory)" Condition="Exists('%(ContentReferences.FullPath)')" />
  </Target>
</Project>
