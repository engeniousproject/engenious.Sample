<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <!-- Add EngeniousContentReference to item type selection in Visual Studio -->
    <ItemGroup>
        <AvailableItemName Include="EngeniousContentReference"/>
        <CompilerVisibleItemMetadata Include="AdditionalFiles" MetadataName="SourceItemGroup"/>
    </ItemGroup>

    <!-- Get all Engenious Game Content References and store them in a list -->
    <ItemGroup>
        <ContentReferences Include="@(EngeniousContentReference)"/>
    </ItemGroup>

    <!-- This disables the IDE feature that skips executing msbuild in some build situations. -->
    <PropertyGroup>
        <DisableFastUpToDateCheck>true</DisableFastUpToDateCheck>
    </PropertyGroup>

    <Target Name="PrepareEngeniousContent">
        <PropertyGroup>
            <ContentRootDirectory>Content</ContentRootDirectory>
        </PropertyGroup>
        <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
            <ParentOutputDir>$(ProjectDir)$(ContentRootDirectory)\bin\Debug</ParentOutputDir>
            <ParentIntermediateDir>$(ProjectDir)$(ContentRootDirectory)\obj\Debug</ParentIntermediateDir>
        </PropertyGroup>
        <PropertyGroup Condition="'$(Configuration)' == 'Release'">
            <ParentOutputDir>$(ProjectDir)$(ContentRootDirectory)\bin\Release</ParentOutputDir>
            <ParentIntermediateDir>$(ProjectDir)$(ContentRootDirectory)\obj\Release</ParentIntermediateDir>
        </PropertyGroup>
        <PropertyGroup>

            <ContentRootDirectory>Content</ContentRootDirectory>


            <EngeniousContentBuilderExe Condition="'$(EngeniousContentBuilderExe)' == ''">$(MSBuildThisFileDirectory)..\..\..\..\engenious.ContentTool\bin\$(Configuration)\$(TargetFramework)\engenious.ContentTool.dll</EngeniousContentBuilderExe>

            <Header>/configuration:$(Configuration) /outputDir:&quot;$(ParentOutputDir)&quot; /intermediateDir:&quot;$(ParentIntermediateDir)&quot; /projectDir:&quot;$(ProjectDir)/&quot; /hidden:true</Header>

            <DotnetExe>dotnet</DotnetExe>
        </PropertyGroup>

        <MakeDir Directories="$(ParentIntermediateDir)"/>
        <MakeDir Directories="$(ParentOutputDir)"/>
        <ItemGroup>
            <AdditionalFiles Include="@(EngeniousContentReference)" SourceItemGroup="EngeniousContentReference"/>
            <EngeniousObjFolders Include="%(ContentReferences.RootDir)%(ContentReferences.Directory)obj" />
        </ItemGroup>
        <XmlPeek XmlInputPath="%(ContentReferences.FullPath)" Query="//Content/Configuration/text()">
            <Output TaskParameter="Result" PropertyName="EngeniousProjectConfiguration" />
        </XmlPeek>
        <XmlPeek XmlInputPath="%(ContentReferences.FullPath)" Query="//Content/Name/text()">
            <Output TaskParameter="Result" PropertyName="EngeniousProjectName" />
        </XmlPeek>
        <ItemGroup>
            <AdditionalFiles Include="%(EngeniousObjFolders.Identity)/$(EngeniousProjectConfiguration)/$(EngeniousProjectName).CreatedContent.dat" />
        </ItemGroup>
    </Target>



    <PropertyGroup>
        <CoreBuildDependsOn>
            $(CoreBuildDependsOn);
            BuildEngeniousContent;
        </CoreBuildDependsOn>
        <CleanDependsOn>
            $(CleanDependsOn);
            CleanEngeniousContent;
        </CleanDependsOn>
        <RebuildDependsOn>
            $(RebuildDependsOn);
            RebuildEngeniousContent;
        </RebuildDependsOn>
    </PropertyGroup>


    <Target Name="BuildEngeniousContent"
        BeforeTargets="BeforeBuild;PreBuildEvent"
        DependsOnTargets="PrepareEngeniousContent">

        <Exec Command="$(DotnetExe) &quot;$(EngeniousContentBuilderExe)&quot; /@:&quot;%(ContentReferences.FullPath)&quot; $(Header)"
            WorkingDirectory="%(ContentReferences.RootDir)%(ContentReferences.Directory)" Condition="Exists('%(ContentReferences.FullPath)')"/>

        <ItemGroup>

            <ExtraContent Include="$(ParentOutputDir)\**\*.*"/>
        </ItemGroup>
        <Copy SourceFiles="@(ExtraContent)" DestinationFolder="$(ProjectDir)\$(OutputPath)\Content\%(RecursiveDir)" SkipUnchangedFiles="true"/>
    </Target>
    <Target Name="CleanEngeniousContent" BeforeTargets="BeforeClean;Clean" DependsOnTargets="PrepareEngeniousContent">
        <Exec Command="$(DotnetExe) &quot;$(EngeniousContentBuilderExe)&quot; /@:&quot;%(ContentReferences.FullPath)&quot; $(Header) /clean"
            WorkingDirectory="%(ContentReferences.RootDir)%(ContentReferences.Directory)" Condition="Exists('%(ContentReferences.FullPath)')"/>
    </Target>
    <Target Name="RebuildEngeniousContent" BeforeTargets="BeforeRebuild;Rebuild" DependsOnTargets="PrepareEngeniousContent">
        <Exec Command="$(DotnetExe) &quot;$(EngeniousContentBuilderExe)&quot; /@:&quot;%(ContentReferences.FullPath)&quot; $(Header) /rebuild"
            WorkingDirectory="%(ContentReferences.RootDir)%(ContentReferences.Directory)" Condition="Exists('%(ContentReferences.FullPath)')"/>
    </Target>
</Project>

